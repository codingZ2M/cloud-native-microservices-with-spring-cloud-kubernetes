# Informing to config server, which config filed needs to be read
spring.application.name=mutualfund
spring.profiles.active=prod
spring.config.import=optional:configserver:http://localhost:9091/

server.port=8083

spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
spring.datasource.url=jdbc:h2:mem:banking
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


#Enabling all actuator endpoint URL's including "refresh" endpoint URL to Reading the updated properties from Config Server without restarting the services
management.endpoints.web.exposure.include=*
# Shutdown the instances gracefully - Indicating to Actuator to use shutdown endpoint to shutdown our in gracefull manner	
management.endpoint.shutdown.enabled=true


# Registering micro services in Eureka with the IP address instead of host name
eureka.instance.preferIpAddress = true 
# Controls whether or not this client registers itself and therefore becomes discoverable
eureka.client.registerWithEureka = true
# Eureka client fetches the registry information from the server and caches it locally. After that, the clients use that information to find other services.
eureka.client.fetchRegistry = true
# Registering Spring Boot service application into Eureka Server
eureka.client.serviceUrl.defaultZone = http://localhost:8070/eureka/


info.app.name=Mutual Fund Microservice
info.app.description= z2m Bank's Mutual Fund Module
info.app.version=1.0.0


# Creating Circuit Breaker pattern - 'closed' state means, calls will happen in the network

# Register all circuit breakers and health related info into Actuator.
resilience4j.circuitbreaker.configs.default.registerHealthIndicator= true
# Configures the minimum number of calls which are required (per sliding window period) before the CircuitBreaker 
# Monitoring minimum of 5 calls coming to this API. (Ex:  At least 5 calls must be recorded)
resilience4j.circuitbreaker.instances.mutualFundProcessState.minimumNumberOfCalls= 5
# Configures the failure rate threshold in percentage.
# When the failure rate is equal or greater than the threshold the CircuitBreaker transitions to open and starts short-circuiting calls.
resilience4j.circuitbreaker.instances.mutualFundProcessState.failureRateThreshold= 50
# CircuitBreaker pattern will regularly go into half-open state.
# How much time Circuit Breaker has to wait inorder to decide to half-open circuit and allowing few of reqeusts to wheather our service are working properly or not.
resilience4j.circuitbreaker.instances.mutualFundProcessState.waitDurationInOpenState= 30000
# Configures the number of permitted calls when the CircuitBreaker is half open.
resilience4j.circuitbreaker.instances.mutualFundProcessState.permittedNumberOfCallsInHalfOpenState=2


# Configurations for Retry Pattern with Resilience4j

# Indicates that Retry has to register all its urls to be exposed using Actuator
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
# What is the number of attempts to invoke
resilience4j.retry.instances.retryFormutualFundProcess.max-attempts=3
# Rety with the duration of 2secs
resilience4j.retry.instances.retryFormutualFundProcess.wait-duration=2000

